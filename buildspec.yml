version: 0.2
env:
  variables:
    # CSPM settings
    CSPM_URL: "cspm.demo.accuknox.com"
    TENANT_ID: "3730"
    LABEL: "SECRETSCAN"
    # Repository to scan and branch details
    TARGET_REPO: "https://github.com/NikhilRawat014/leaky-repo"
    BRANCH: "master"
    # Optional flags
    RESULTS: ""
    FAIL: "false"
    EXCLUDE_PATHS: ""
    ARGS: ""
  secrets-manager:
    AK_TOKEN: "AccuKnoxAPIToken"

phases:
  pre_build:
    commands:
      - echo "Cloning repository..."
      - git clone --single-branch --branch $BRANCH $TARGET_REPO app
      - chmod -R 777 app

  build:
    commands:
      - echo "Preparing TruffleHog flags..."
      - |
        # Build branch flag
        BRANCH_FLAG=""
        if [ -n "$BRANCH" ] && [ "$BRANCH" != "all-branches" ]; then
          BRANCH_FLAG="--branch=$BRANCH"
        fi

        # Build exclude paths flag
        EXCLUDE_FLAG=""
        if [ -n "$EXCLUDE_PATHS" ]; then
          IFS=',' read -ra PATHS <<< "$EXCLUDE_PATHS"
          for path in "${PATHS[@]}"; do
            EXCLUDE_FLAG+=" -x /pwd/${path}"
          done
        fi

        # Build results flag
        RESULTS_FLAG=""
        [ -n "$RESULTS" ] && RESULTS_FLAG="--results $RESULTS"

        # Build fail flag
        FAIL_FLAG=""
        [ "$FAIL" == "true" ] && FAIL_FLAG="--fail"

      - echo "Running TruffleHog scan..."
      - |
        docker run --rm -v $(pwd)/app:/pwd trufflesecurity/trufflehog:3.88.1 \
          git file:///pwd --json --no-update \
          $BRANCH_FLAG $RESULTS_FLAG $FAIL_FLAG $EXCLUDE_FLAG $ARGS > trufflehog-results.json

        echo $? > trufflehog_exit_code.txt

  post_build:
    commands:
      - echo "Uploading results to CSPM..."
      - |
        # Upload scan results
        RESPONSE=$(curl --location --request POST "https://${CSPM_URL}/api/v1/artifact/?tenant_id=${TENANT_ID}&data_type=TruffleHog&save_to_s3=true&label_id=${LABEL}" \
          --header "Tenant-Id: ${TENANT_ID}" \
          --header "Authorization: Bearer ${AK_TOKEN}" \
          --form "file=@$(pwd)/trufflehog-results.json")
        echo "Response: $RESPONSE"

        # Check upload response
        if echo "$RESPONSE" | grep -q "File received successfully"; then
          echo "Report uploaded successfully"
        else
          echo "Error uploading report: $RESPONSE"
          exit 1
        fi

        # Check TruffleHog exit code if FAIL is enabled
        if [ "$FAIL" == "true" ] && [ $(cat trufflehog_exit_code.txt) -ne 0 ]; then
          echo "Secrets detected! Failing build..."
          exit 1
        fi

artifacts:
  files:
    - trufflehog-results.json
